# Generated by Django 4.2.2 on 2023-07-14 15:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Authors',
            fields=[
                ('author_id', models.CharField(default='', max_length=100, primary_key=True, serialize=False, verbose_name='Author ID')),
                ('name', models.CharField(default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('book_id', models.CharField(default='', max_length=100, primary_key=True, serialize=False, verbose_name='Book ID')),
                ('title', models.CharField(default='', max_length=200, verbose_name='Book Title')),
                ('author_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='myapp.authors', verbose_name='Author ID')),
            ],
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('category_id', models.CharField(default='', max_length=100, primary_key=True, serialize=False, verbose_name='Category ID')),
                ('name', models.CharField(default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('cust_id', models.CharField(default='', max_length=100, primary_key=True, serialize=False, verbose_name='Customer ID')),
                ('cust_fullname', models.CharField(default='', max_length=200, verbose_name='Customer Full Name')),
            ],
        ),
        migrations.CreateModel(
            name='Publishers',
            fields=[
                ('publisher_id', models.CharField(default='', max_length=100, primary_key=True, serialize=False, verbose_name='Publisher ID')),
                ('name', models.CharField(default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.CharField(default='', max_length=100, primary_key=True, serialize=False, verbose_name='Order ID')),
                ('order_date', models.DateField()),
                ('cust_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='myapp.customers', verbose_name='Customer ID')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('order_detail_id', models.CharField(default='', max_length=100, primary_key=True, serialize=False, verbose_name='Order Detail ID')),
                ('book_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='myapp.books', verbose_name='Book ID')),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='myapp.orders', verbose_name='Order ID')),
            ],
        ),
        migrations.AddField(
            model_name='books',
            name='category_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='myapp.categories', verbose_name='Category ID'),
        ),
        migrations.AddField(
            model_name='books',
            name='publisher_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='myapp.publishers', verbose_name='Publisher ID'),
        ),
        migrations.CreateModel(
            name='BookFavourites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_favourite', models.BooleanField(default=True, verbose_name='Is Favourite Book?')),
                ('is_blocked', models.BooleanField(default=True, verbose_name='Is Blocked?')),
                ('book_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='myapp.books', verbose_name='Book ID')),
                ('cust_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='myapp.customers', verbose_name='Customer ID')),
            ],
        ),
    ]
